generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model documents {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_id String    @db.Uuid
  content    String
  created_at DateTime? @default(now()) @db.Timestamp(6)
  projects   projects  @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model projects {
  id               String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_name     String
  description      String
  budget           Int
  targeted_outcome String
  beneficiaries    Int
  important_fields String?
  start_date       DateTime    @db.Timestamp(6)
  end_date         DateTime    @db.Timestamp(6)
  created_at       DateTime?   @default(now()) @db.Timestamp(6)
  updated_at       DateTime?   @default(now()) @db.Timestamp(6)
  documents        documents[]
  reviews          reviews[]
}

model reviews {
  review_id        String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stakeholder_id   String       @db.Uuid
  project_id       String       @db.Uuid
  review           String
  stakeholder_type String       @db.VarChar(50)
  projects         projects     @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  stakeholders     stakeholders @relation(fields: [stakeholder_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model stakeholders {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  stakeholder_name String    @db.VarChar(255)
  email            String    @unique @db.VarChar(255)
  password         String
  reviews          reviews[]
}
